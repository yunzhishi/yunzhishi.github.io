<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Sarah's Interactive Voronoi Diagram]]></title>
      <url>/voronoi.html</url>
      <content type="html"><![CDATA[<p><img src="/images/voronoi/Voronoi_Matt.png" alt="Voronoi_Matt"></p>
<p>My friend and colleague, Sarah Yvonne Greer, is currently in her senior year.  She used her passion on llamas to design her cool cozy <a href="http://sygreer.com" target="_blank" rel="external">personal website</a>.  It contains some very interesting mathematical visualization projects, including this interactive <a href="http://sygreer.com/projects/voronoi" target="_blank" rel="external">Voronoi diagram</a>.</p>
<a id="more"></a>
<p>Her work was linked on the Agile Scientific’s blog post <a href="https://agilescientific.com/blog/2017/10/4/kings-crows-and-taxicabs" target="_blank" rel="external">The norm: kings, crows and taxicabs</a> by Matt Hall; the figure in the very beginning is from that post. She also got a chance to join the Undersampled Radio show <a href="https://undersampledrad.io/home/2017/10/game-set-match" target="_blank" rel="external">Game, Set, Match</a> recently.</p>
<p>Unlike she having a dedicated server in Oregon, I host this website in <a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;ved=0ahUKEwjOoYjAmJ7XAhUF0YMKHSadBP8QFggoMAA&amp;url=https%3A%2F%2Fpages.github.com%2F&amp;usg=AOvVaw0rFEJ-mlO9IotpcBjyXtQl" target="_blank" rel="external">Git Pages</a> for free. Therefore I am limited to using <strong>static pre-generated web pages</strong>. The architecture that I am using now is <a href="https://hexo.io" target="_blank" rel="external">Hexo</a>. Yet I wanted to explore the interaction feature out of its poor Javascript support. After tiny teeny adoptions, I managed to brutally reproduce it here.</p>

<script type="text/javascript" src="/lib/processingjs/processing.js"></script>
<script type="text/javascript">
    function setNorm(norm) {
        var pjs = Processing.getInstanceById('voronoi');
        pjs.updatePoints(norm); }

    function reset() {
        var pjs = Processing.getInstanceById('voronoi');
        pjs.clearBoard(); }
</script>

<center>
<canvas id="voronoi" data-processing-sources="/scripts/voronoi/voronoi.pde"></canvas>
<br>
<div class="text-center">
    <a class="btn" onclick="setNorm(1)" rel="contents"> Manhattan </a>
    <a class="btn" onclick="setNorm(0)" rel="contents"> Euclidean </a>
    <a class="btn" onclick="setNorm(2)" rel="contents"> Chebyshev </a>
    <a class="btn" onclick="reset()" rel="contents"> Clear </a>
</div>
</center>

<h3 id="About"><a href="#About" class="headerlink" title="About"></a>About</h3><p>You can read more about this interactive Voronoi diagram on <a href="http://mathworld.wolfram.com/VoronoiDiagram.html" target="_blank" rel="external">Wolfram MathWorld</a> and <a href="https://en.wikipedia.org/wiki/Voronoi_diagram" target="_blank" rel="external">Wikipedia</a>. In this demonstration, there are 3 different metrics. The table below describes them. Essentially, these metrics represent $L_1$, $L_2$, and $L_\infty$ distance, respectively, between the point of interest $\mathbf{a}=(x_1,\,y_1)$ (denoted by black dots on the above display) and any other point $\mathbf{b}=(x_2,\,y_2)$ on the plane.</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Measurement</th>
</tr>
</thead>
<tbody>
<tr>
<td>Manhattan distance</td>
<td>$\Vert\mathbf{b}-\mathbf{a}\Vert_1 = \vert x_2-x_1\vert + \vert y_2-y_1\vert$</td>
</tr>
<tr>
<td>Euclidean distance</td>
<td>$\Vert\mathbf{b}-\mathbf{a}\Vert_2 = \sqrt{(x_2-x_1)^2 + (y_2-y_1)^2}$</td>
</tr>
<tr>
<td>Chebyshev distance</td>
<td>$\Vert\mathbf{b}-\mathbf{a}\Vert_\infty = \max{(\vert x_2-x_1\vert,\,\vert y_2-y_1\vert)}$</td>
</tr>
</tbody>
</table>
<h3 id="Instructions"><a href="#Instructions" class="headerlink" title="Instructions"></a>Instructions</h3><ul>
<li>Click anywhere on the canvas above to add a point.</li>
<li>Use the buttons below the canvas to change the measured metric and clear the display.</li>
</ul>
<p>Alternatively, you can press <code>1</code> to use the Manhattan distance, <code>2</code> to use the Euclidean distance, <code>3</code> to use the Chebyshev distance, <code>n</code> to toggle through all metrics, and <code>R</code> to clear the display.</p>
<h3 id="Here’s-a-bug"><a href="#Here’s-a-bug" class="headerlink" title="Here’s a bug!"></a>Here’s a bug!</h3><h4 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h4><p>Weirdly, I found a very subtle bug that only occurs here but not in Sarah’s original page. You can follow the instructions below to reproduce this bug in the next demo (I fixed this bug in the first demo).</p>
<ol>
<li>Click on the diagram to see the result;</li>
<li>Click the button to change metric norm (Do NOT use shortcut keys! Bug only happens when clicking buttons);</li>
<li>Click the diagram again, you will see incorrect small circles instead of correct segmentations.</li>
</ol>

<script type="text/javascript" src="/lib/processingjs/processing-min.js"></script>
<script type="text/javascript">
    function setNorm_old(norm) {
        var pjs = Processing.getInstanceById('voronoi_old');
        pjs.updatePoints(norm); }

    function reset_old() {
        var pjs = Processing.getInstanceById('voronoi_old');
        pjs.clearBoard(); }
</script>

<center>
<canvas id="voronoi_old" data-processing-sources="/scripts/voronoi/voronoi_old.pde"></canvas>
<br>
<div class="text-center">
    <a class="btn" onclick="setNorm_old(1)" rel="contents"> Manhattan </a>
    <a class="btn" onclick="setNorm_old(0)" rel="contents"> Euclidean </a>
    <a class="btn" onclick="setNorm_old(2)" rel="contents"> Chebyshev </a>
    <a class="btn" onclick="reset_old()" rel="contents"> Clear </a>
</div>
</center>

<h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>I found that it’s related to the function <code>updatePoints</code> from the code <a href="http://sygreer.com/projects/voronoi/voronoi.pde" target="_blank" rel="external"><code>voronoi.pde</code></a>.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line"><span class="keyword">int</span> n;                   <span class="comment">// metric flag</span></div><div class="line">...</div><div class="line"><span class="comment">// update points on the plane</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updatePoints</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = points.size()-<span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</div><div class="line">        Point p = points.get(i);</div><div class="line">        p.changeMetric(n);</div><div class="line">    &#125;</div><div class="line">    redraw();</div><div class="line">&#125;</div><div class="line">...</div></pre></td></tr></table></figure></p>
<p>Notice that <code>int n</code> is declared as a global variable; however, in <code>updatePoints</code> it was only called as a local dummy variable. It leads to a very dangerous ambiguity: how should these two variables with the same name but different scope be related? Often this is an environment-dependent result. Eventually I fixed it by explicitly updating the value of the global variable <code>int n</code>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updatePoints</span><span class="params">(<span class="keyword">int</span> n_new)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = points.size()-<span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</div><div class="line">        Point p = points.get(i);</div><div class="line">        p.changeMetric(n_new);</div><div class="line">    &#125;</div><div class="line">    n = n_new</div><div class="line">    redraw();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>If you haven’t gotten bored yet, go back to the first interactive demo and see whether the bug is solved.</p>
<h3 id="Source-code"><a href="#Source-code" class="headerlink" title="Source code"></a>Source code</h3><p>You can download the source code from Sarah’s website <a href="http://sygreer.com/projects/voronoi/sygreer_voronoi.zip" target="_blank" rel="external">here</a> (ZIP file, 20kB). You will need <a href="http://processingjs.org/" target="_blank" rel="external">Processing.js</a> to run the program, not the <a href="https://processing.org/" target="_blank" rel="external">Processing software package</a> she mentioned. <img id="github-emoji" src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f620.png?v7" height="20" width="20"> <img id="github-emoji" src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f624.png?v7" height="20" width="20"></p>
]]></content>
      
        <categories>
            
            <category> Algorithm </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Interactive </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git Tricks]]></title>
      <url>/git-tricks.html</url>
      <content type="html"><![CDATA[<p>I learned some git tricks from the website: <a href="liaoxuefeng.com">廖雪峰的官方网站</a>. Unfortunately the posts in the website are all writen in Chinese, therefore I would like to share them here in English.</p>
<h3 id="Git-Alias"><a href="#Git-Alias" class="headerlink" title="Git Alias"></a>Git Alias</h3><p>We use some git commands such as <code>git status</code> a lot. It is often annoying to redo hundreds of times because of typos when we type this word <code>status</code>.<br><code>git st</code> is much easiser than <code>git status</code>, we like lazy solutions.<br>All we need to do is typing one command line, telling git that thereafter <code>st</code> is the alias of <code>status</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git config --global alias.st status</div></pre></td></tr></table></figure></p>
<p>Now just try typing <code>git st</code> and see if it works.</p>
<a id="more"></a>
<p>There are other commands that can be abbreviated, it is commonly used that <code>co</code> for <code>checkout</code>, <code>ci</code> for <code>commit</code> and <code>br</code> for <code>branch</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git config --global alias.co checkout</div><div class="line">$ git config --global alias.ci commit</div><div class="line">$ git config --global alias.br branch</div></pre></td></tr></table></figure></p>
<p>Since then, a commit command can be simplified as:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git ci -m <span class="string">"blah blah ..."</span></div></pre></td></tr></table></figure></p>
<p>In the <code>git config</code> commands above, <code>--global</code> option means that the parameters are used globally, and are available in all repositories within the same user account in the computer.</p>
<p>Besides, alias is also used for custom git commands. For example, let’s set up a <code>git last</code> command showing last single commit log:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git config --global alias.last `<span class="built_in">log</span> -1`</div></pre></td></tr></table></figure></p>
<p>Using <code>git last</code> to show the latest commit information:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git last</div><div class="line">commit 6357e65da0faaeb95eb87251ce5b0db6e3e1b7d6</div><div class="line">Author: Yunzhi Shi &lt;yzshi08@utexas.edu&gt;</div><div class="line">Date:   Tue May 10 11:14:56 2016 -0500</div><div class="line"></div><div class="line">    Seislet <span class="built_in">test</span>.</div></pre></td></tr></table></figure></p>
<p>Behold, well, check this out:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git config --global alias.lg <span class="string">"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit"</span></div></pre></td></tr></table></figure></p>
<p>The output of <code>git lg</code>:<br><img src="/images/git-tricks/git-last.png" alt="git last"><br>Dang, why didn’t I know about this before?</p>
<h3 id="Alias-Config-File"><a href="#Alias-Config-File" class="headerlink" title="Alias Config File"></a>Alias Config File</h3><p>While configuring git, attaching <code>--global</code> option makes it effective to current user, otherwise it will only be effective within currect repository.<br>Where do all these configurations go? For each repository, configurations are stored in file <code>.git/config</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ cat .git/config</div><div class="line">[core]</div><div class="line">	repositoryformatversion = 0</div><div class="line">	filemode = <span class="literal">true</span></div><div class="line">	bare = <span class="literal">false</span></div><div class="line">	logallrefupdates = <span class="literal">true</span></div><div class="line">	ignorecase = <span class="literal">true</span></div><div class="line">	precomposeunicode = <span class="literal">true</span></div><div class="line">[remote <span class="string">"origin"</span>]</div><div class="line">	url = git@github.com:TCCS-BEG/all.git</div><div class="line">	fetch = +refs/heads/*:refs/remotes/origin/*</div><div class="line">[branch <span class="string">"master"</span>]</div><div class="line">	remote = origin</div><div class="line">	merge = refs/heads/master</div><div class="line">[<span class="built_in">alias</span>]</div><div class="line">    last = <span class="built_in">log</span> -1</div></pre></td></tr></table></figure></p>
<p>Current alias configurations are written in <code>[alias]</code>.<br>For global cofigurations, they are stored in an invisible file under main folder <code>~/.gitconfig</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[user]</div><div class="line">	name = Yunzhi Shi</div><div class="line">	email = yzshi08@utexas.edu</div><div class="line">[<span class="built_in">alias</span>]</div><div class="line">	st = status</div><div class="line">	co = checkout</div><div class="line">	ci = commit</div><div class="line">	br = branch</div><div class="line">	unstage = reset HEAD</div><div class="line">	last = <span class="built_in">log</span> -1</div><div class="line">	lg = <span class="built_in">log</span> --color --graph --pretty=format:<span class="string">'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset'</span> --abbrev-commit</div><div class="line">[color]</div><div class="line">	ui = <span class="literal">true</span></div></pre></td></tr></table></figure></p>
<p>We can directly modify content in this file to configure alias settings or other personal customizations.</p>
<h3 id="We-Are-Lazy"><a href="#We-Are-Lazy" class="headerlink" title="We Are Lazy"></a>We Are Lazy</h3><p>We are lazy, so we utilize all we could to minimize our labor XD.</p>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
            <tag> Tricks </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/hello-world.html</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h3 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h3><h4 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<a id="more"></a>
<h4 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h4 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h4 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> Blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
